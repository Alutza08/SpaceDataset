import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("C:\\Users\Admin\PycharmProjects\ProjectEric\Space_Corrected.csv")
df = df.drop(columns=['Unnamed: 0', 'Unnamed: 0.1'])
df.columns = df.columns.str.strip()

###################### –ì–ò–ü–û–¢–ï–ó–ê 1 ##################
# #2. –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞—Ç–∏ —É datetime
# df['Datum'] = pd.to_datetime(df['Datum'], errors='coerce')
#
# # 3. –í–∏—Ç—è–≥—É—î–º–æ –≥–æ–¥–∏–Ω—É –∑–∞–ø—É—Å–∫—É
# df['Hour'] = df['Datum'].dt.hour
#
# # 4. –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ —Ç–∞–∫–µ "—Ä–∞–Ω–æ–∫" (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑ 5 –¥–æ 12)
# df['Morning'] = df['Hour'].between(5, 11)  # –≤–∫–ª—é—á–Ω–æ 5:00 - 11:59
#
# # 5. –í–∏–∑–Ω–∞—á–∏–º–æ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –∫–æ–º–ø–∞–Ω—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥)
# private_companies = [
#     "SpaceX", "Blue Origin", "Rocket Lab", "Virgin Orbit", "Astra", "Orbital Sciences",
#     "Firefly", "OneSpace", "Relativity Space", "Interorbital Systems", "ExPace"
# ]
#
# # 6. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É –∑ —Ç–∏–ø–æ–º –∫–æ–º–ø–∞–Ω—ñ—ó
# df['Company Type'] = df['Company Name'].apply(lambda x: 'Private' if x in private_companies else 'Government')
#
# # 7. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É "–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å"
# df['Success'] = df['Status Mission'].str.strip() == "Success"
#
# # 8. –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ä–∞–Ω–∫–æ–≤—ñ –∑–∞–ø—É—Å–∫–∏
# morning_df = df[df['Morning'] == True]
#
# # 9. –†–∞—Ö—É—î–º–æ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –∫–æ–º–ø–∞–Ω—ñ—ó
# success_by_type = morning_df.groupby('Company Type')['Success'].mean() * 100
#
# print("–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –∑–∞–ø—É—Å–∫—ñ–≤ —É —Ä–∞–Ω–∫–æ–≤—ñ –≥–æ–¥–∏–Ω–∏ (%):")
# print(success_by_type)
#
# success_by_type.plot(kind='bar', color=['green', 'blue'])
# plt.ylabel('% –£—Å–ø—ñ—à–Ω–∏—Ö –∑–∞–ø—É—Å–∫—ñ–≤')
# plt.title('–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å —Ä–∞–Ω–∫–æ–≤–∏—Ö –∑–∞–ø—É—Å–∫—ñ–≤: –ü—Ä–∏–≤–∞—Ç–Ω—ñ vs –î–µ—Ä–∂–∞–≤–Ω—ñ –∫–æ–º–ø–∞–Ω—ñ—ó')
# plt.xticks(rotation=0)
# plt.ylim(0, 100)
# plt.show()
###################### –ì–ò–ü–û–¢–ï–ó–ê 1 ##################

###################### –ì–ò–ü–û–¢–ï–ó–ê 2 ##################
# –ü—Ä–∏–≤–æ–¥–∏–º–æ –¥–æ –Ω–∏–∂–Ω—å–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
# df['Status Mission'] = df['Status Mission'].str.strip().str.lower()
#
# # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
# def classify_status(status):
#     if 'success' in status:
#         return 'Success'
#     else:
#         return 'Failure'
#
# # –ù–æ–≤–∞ –∫–æ–ª–æ–Ω–∫–∞ –∑ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é
# df['Mission Result'] = df['Status Mission'].apply(classify_status)
# df['Success'] = df['Mission Result'] == 'Success'
#
# df['Datum'] = pd.to_datetime(df['Datum'], errors='coerce')
# df['Year'] = df['Datum'].dt.year
#
# success_by_year = df.groupby('Year')['Success'].mean() * 100
#
# success_by_year.plot(marker='o', color='green', figsize=(12,6))
# plt.title("–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –∑–∞–ø—É—Å–∫—ñ–≤ –ø–æ —Ä–æ–∫–∞—Ö (—É—Å—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ success)")
# plt.xlabel("–†—ñ–∫")
# plt.ylabel("% –£—Å–ø—ñ—à–Ω–∏—Ö –∑–∞–ø—É—Å–∫—ñ–≤")
# plt.grid(True)
# plt.ylim(0, 100)
# plt.show()
###################### –ì–ò–ü–û–¢–ï–ó–ê 2 ##################

###################### –ì–ò–ü–û–¢–ï–ó–ê 3 ##################
# –û—á–∏—Å—Ç–∫–∞ —Ç–∞ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –º—ñ—Å—ñ—ó
df['Status Mission'] = df['Status Mission'].str.strip().str.lower()

#–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –º—ñ—Å—ñ—ó —è–∫ Success / Failure
def classify_status(status):
   if 'success' in status:
       return 'Success'
   else:
       return 'Failure'

df['Mission Result'] = df['Status Mission'].apply(classify_status)
df['Success'] = df['Mission Result'] == 'Success'

# üîπ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ –∑–∞–ø—É—Å–∫—ñ–≤ –ø–æ –ª–æ–∫–∞—Ü—ñ—è—Ö
success_by_location = df.groupby('Location')['Success'].mean() * 100

# üîπ –¢–æ–ø-10 –ª–æ–∫–∞—Ü—ñ–π –∑–∞ —Å–µ—Ä–µ–¥–Ω—å–æ—é —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—é
top_locations = success_by_location.sort_values(ascending=False).head(50)

# üîπ –í–∏–≤—ñ–¥
print("–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –∑–∞–ø—É—Å–∫—ñ–≤ –∑–∞ –ª–æ–∫–∞—Ü—ñ—î—é (—Ç–æ–ø-20) (%):")
print(top_locations)

# üîπ –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
plt.figure(figsize=(12,6))
top_locations.plot(kind='barh', color='skyblue')
plt.xlabel('% –£—Å–ø—ñ—à–Ω–∏—Ö –∑–∞–ø—É—Å–∫—ñ–≤')
plt.title("–¢–æ–ø-20 –ª–æ–∫–∞—Ü—ñ–π –∑–∞ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—é –∑–∞–ø—É—Å–∫—ñ–≤")
plt.xlim(0, 100)
plt.gca().invert_yaxis()
plt.grid(True, axis='x')
plt.tight_layout()
plt.show()
###################### –ì–ò–ü–û–¢–ï–ó–ê 3 ##################

###################### –ì–ò–ü–û–¢–ï–ó–ê 4 ##################
# df['Status Mission'] = df['Status Mission'].str.strip().str.lower()
#
# # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É Success (True, —è–∫—â–æ –≤ —Å—Ç–∞—Ç—É—Å—ñ —î 'success')
# df['Success'] = df['Status Mission'].apply(lambda x: 'success' in x)
#
# # –ì—Ä—É–ø—É—î–º–æ –ø–æ –∫–æ–º–ø–∞–Ω—ñ—è—Ö
# company_stats = df.groupby('Company Name')['Success'].agg(['mean', 'count']).sort_values(by='count', ascending=False)
# company_stats.rename(columns={'mean': 'Success Rate', 'count': 'Total Launches'}, inplace=True)
#
# # –í–∏–≤—ñ–¥ —Ç–∞–±–ª–∏—Ü—ñ
# print("–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –∫–æ–º–ø–∞–Ω—ñ–π –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–∞–ø—É—Å–∫—ñ–≤:")
# print(company_stats)
#
# # –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è
# plt.figure(figsize=(10, 6))
# sns.scatterplot(data=company_stats, x='Total Launches', y='Success Rate', size='Total Launches', hue='Success Rate', palette='coolwarm', legend=False)
# plt.title("–ó–≤'—è–∑–æ–∫ –º—ñ–∂ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑–∞–ø—É—Å–∫—ñ–≤ —ñ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—é (–ø–æ –∫–æ–º–ø–∞–Ω—ñ—è—Ö)")
# plt.xlabel('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø—É—Å–∫—ñ–≤')
# plt.ylabel('–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å (%)')
# plt.ylim(0, 1.05)
# plt.grid(True)
# plt.tight_layout()
# plt.show()
###################### –ì–ò–ü–û–¢–ï–ó–ê 4 ##################

#print(df.info())
